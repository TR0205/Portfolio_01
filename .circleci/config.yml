version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0
jobs:
  rubocop:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:8.0.19
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_PASSWORD: ''
          MYSQL_DATABASE: bookcafe-review-app_test
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_HOST: '%'
          MYSQL_USER: root
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - run: yarn install
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - run: mv config/database.yml.ci config/database.yml
      # Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop -a

workflows:
  version: 2
  rubocop_rspec:
    jobs:
      - rubocop
  # nginxのデプロイ
  nginx-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only: master
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          dockerfile: ./nginx/Dockerfile
          repo: repo-web
          tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: "${AWS_RESOURCE_NAME_PREFIX_WEB}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX_WEB}-cluster"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX_WEB}-service,tag=${CIRCLE_SHA1}"
  # Railsのデプロイ
  rails-deploy:
    jobs:
      - aws-ecr/build-and-push-image:
          filters:
            branches:
              only: master
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          dockerfile: ./Dockerfile
          repo: repo-app
          tag: "${CIRCLE_SHA1}"
      - aws-ecs/deploy-service-update:
          requires:
            - aws-ecr/build-and-push-image
          family: "${AWS_RESOURCE_NAME_PREFIX_WEB}-service"
          cluster-name: "${AWS_RESOURCE_NAME_PREFIX_APP}-cluster"
          container-image-name-updates: "container=${AWS_RESOURCE_NAME_PREFIX_APP}-service,tag=${CIRCLE_SHA1}"